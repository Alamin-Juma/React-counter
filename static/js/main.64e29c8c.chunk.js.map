{"version":3,"sources":["components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Button","increment","onClickFunction","className","onClick","App","useState","count","setCount","incrementCount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAeeA,G,KAZA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBAI3B,OACI,qBAAKC,UAAU,UAAf,SACE,yBAAQC,QALM,WAClBF,EAAgBD,IAIZ,cAAgCA,SCezBI,MAnBf,WAAgB,IAAD,EACeC,mBAAS,GADxB,mBACJC,EADI,KACGC,EADH,KAGLC,EAAiB,SAACR,GACpBO,EAASD,EAAQN,IAIrB,OACI,sBAAKE,UAAU,OAAf,UAEQ,cAAC,EAAD,CAAQF,UAAW,GAAIC,gBAAiBO,IACxC,cAAC,EAAD,CAAQR,UAAW,IAAKC,gBAAiBO,IACzC,cAAC,EAAD,CAAQR,UAAW,IAAMC,gBAAiBO,IAC1C,+BAAOF,QCPRG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.64e29c8c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Button = ({ increment, onClickFunction }) => {\r\n  const handleClick = () => {\r\n    onClickFunction(increment);\r\n  };\r\n  return (\r\n      <div className=\"Button \">\r\n        <button onClick={handleClick}>+{increment}</button>\r\n      </div>\r\n  );\r\n\r\n};\r\n\r\nexport default Button;\r\n","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\n\n\nfunction App() {\n    const [count, setCount] = useState(0);\n\n    const incrementCount = (increment) => {\n        setCount(count + increment);\n    };\n    \n\n    return (\n        <div className=\"App \">\n\n                <Button increment={10} onClickFunction={incrementCount}/>\n                <Button increment={100} onClickFunction={incrementCount}/>\n                <Button increment={1000} onClickFunction={incrementCount}/>\n                <span>{count}</span>\n            </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}